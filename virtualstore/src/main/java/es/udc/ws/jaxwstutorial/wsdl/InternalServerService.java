
package es.udc.ws.jaxwstutorial.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-02/02/2007 09:55 AM(vivekp)-FCS
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "InternalServerService", targetNamespace = "http://ws.adoo.udc.es/", wsdlLocation = "file:/D:/Surah/workspaces/Eclipse/workspace-Practica-ADOO/mashup/mashup-internalserver/target/jaxws/wsgen/wsdl/InternalServerService.wsdl")
public class InternalServerService
    extends Service
{

    private final static URL INTERNALSERVERSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Surah/workspaces/Eclipse/workspace-Practica-ADOO/mashup/mashup-internalserver/target/jaxws/wsgen/wsdl/InternalServerService.wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        INTERNALSERVERSERVICE_WSDL_LOCATION = url;
    }

    public InternalServerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InternalServerService() {
        super(INTERNALSERVERSERVICE_WSDL_LOCATION, new QName("http://ws.adoo.udc.es/", "InternalServerService"));
    }

    /**
     * 
     * @return
     *     returns InternalServerProvider
     */
    @WebEndpoint(name = "InternalServerProviderPort")
    public InternalServerProvider getInternalServerProviderPort() {
        return (InternalServerProvider)super.getPort(new QName("http://ws.adoo.udc.es/", "InternalServerProviderPort"), InternalServerProvider.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InternalServerProvider
     */
    @WebEndpoint(name = "InternalServerProviderPort")
    public InternalServerProvider getInternalServerProviderPort(WebServiceFeature... features) {
        return (InternalServerProvider)super.getPort(new QName("http://ws.adoo.udc.es/", "InternalServerProviderPort"), InternalServerProvider.class, features);
    }

}
